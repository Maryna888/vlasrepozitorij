'number' + 3 + 3 
відбувається конкатенація, результатом буде number33

null + 3 
null приймає значення 0, результатом буде (0+3)= 3

5 && "qwerty"
число завжди true, текст також true, результат виведення буде qwerty

+'40' + +'2' + "hillel";
+'40' та +'2' приводяться до чисел та через додавання різних типів відбувається конкатенація, результатом додавання буде 402hillel

'10' - 5 === 6;
'10' приводиться до числа - 5=5, чи строго 5 дорівнює 6, результатом буде false

true + false
true приймає значення 1, false приймає значення 0, результатом буде 1

'4px' - 3 
'4px' не перетворює на цифру, результатом буде NaN

'4' - 3
'4' приводиться до числа, результатом буде 1

'6' + 3 ** 0;
відбувається конкатенація, 3 в 0 ступеню буде 1, результатом буде 61

12 / '6'
результатом буде 2

'10' + (5 === 6);
чи строго 5 дорівнює 6 буде false, 10 + false, відбувається конкатенація, результатом буде 10false

null == ''
чи дорівнює 0 undefined, результатом буде true, бо так вирішили розробники JS

3 ** (9 / 3);
3 в третьому ступені(результат поділу 9/3), результатом буде 27

!!'false' == !!'true'
не false, тоді true, не true, тоді false не строго дорівнює не true, тоді false, не false, тоді true
результатом буде false

0 || '0' && 1
false або true і true, резульатом буде true 

(+null == false) < 1;
null не строго дорівнює false, яке приводиться до 0, та менше за 1, результатом буде true

false && true || true
результатом буде true, тому що при другій дії "або" є одне true

false && (false || true);
результатом буде false, тому що при другій дії (котра в дужках) "I" є false

(+null == false) < 1 ** 5; 
null не строго дорівнює false, яке приводиться до 0, та менше за 1, результатом буде true
